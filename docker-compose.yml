#version: '3.8'
services:
  postgres:
    image: postgres:14.5
    env_file:
      - .env
    ports:
      - "8123:5432"
    volumes:
      - pgdata2:/var/lib/postgres/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

  flask:
    build:
      context: .
      dockerfile: Dockerfile
    #ports:
    #  - "5000:5000"
    expose:
      - 5000
    volumes:
        - ./src:/app/src
        - ./pyproject.toml:/app/pyproject.toml
        - ./data:/data
        - ./logs:/logs
    env_file:
      - .env
    environment:
      - IS_DOCKER=true
    depends_on:
      - postgres
    networks:
      - app_network

  caddy:
    image: caddy:2.8-alpine
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - flask
      - postgres
    networks:
      - app_network

volumes:
  pgdata2:
  caddy_data:
  caddy_config:

networks:
  app_network:
    driver: bridge
